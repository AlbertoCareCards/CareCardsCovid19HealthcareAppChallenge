import podNames from 'ember-component-css/pod-names';

/**
 * Injects ember-component-css styleNamespace property in all Glimmer
 * components, so component style works for Octane updates.
 * To make use of the styles you still have to wrap the Glimmer component
 * with a div with class={{styleNamespace}}.
 */

/**
 * Given a component path this function extracts the factory class from the APP
 * instance. This way we can use the class later on to inject the styleNamespace
 * property.
 *
 * @param {Object} appInstance
 * @param {string} componentPath
 */
function extractComponentFactoryClass(appInstance, componentPath) {
  const factoryForComponent = appInstance.factoryFor(`component:${componentPath}`);
  if (!factoryForComponent) return null;
  return factoryForComponent.class;
}

/**
 * Given a Component Factory class this function adds a new field "styleNamespace" to
 * it so all component instances include this property. This styleNamespace is the one
 * generated by Ember Component CSS for the component and can be used as a class to
 * inject the component style in the service:
 *
 * // component hbs
 * <div class={{styleNamespace}}>
 *   ...
 * </div>
 *
 * This is something that you will have to do in all Glimmer extended components to make
 * them work with ember-component-css.
 *
 * @param {class} componentFactoryClass
 * @param {string} styleNamespace
 */
function addStyleNameSpaceToComponentFactoryClass(componentFactoryClass, styleNamespace) {
  if(!componentFactoryClass) return null;
  Object.defineProperty(componentFactoryClass.prototype, "styleNamespace", {
    configurable: true,
    enumerable: true,
    get: function () {
      return styleNamespace;
    }
  });
}

function initialize(appInstance) {
  for (const [componentPath, styleNamespace] of Object.entries(podNames)) {
    const componentConstructor = extractComponentFactoryClass(appInstance, componentPath);
    addStyleNameSpaceToComponentFactoryClass(componentConstructor, styleNamespace);
  }
}

export default {
  after: "route-styles", // run after `ember-component-css` "route-styles"-Initializer
  initialize
}
